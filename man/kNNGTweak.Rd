% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00_Wrappers.R
\name{kNNGTweak}
\alias{kNNGTweak}
\title{Tweak format of a \code{k}-nearest-neighbour graph object}
\usage{
kNNGTweak(
  knn,
  only_indices = TRUE,
  zero_index = TRUE,
  zeroth_neighbours = TRUE,
  new_k = NULL
)
}
\arguments{
\item{knn}{list: \code{knn} object created either directly via \code{ComputekNNMatrix} or by including a \code{k}-NNG generation step in a benchmark pipeline and evaluating it}

\item{only_indices}{logical value: whether to only keep indices of nearest neighbours, discarding the distance matrix. Default value is \code{TRUE}}

\item{zero_index}{logical value: whether to use zero indexing for nearest-neighbour indices. Default value is \code{TRUE}}

\item{zeroth_neighbours}{logical value: whether to include the zero-th neighbour to each point (self). Default value is \code{TRUE}}

\item{new_k}{optional integer value: new \code{k} for \code{k}-NN. Default value is \code{NULL}}
}
\description{
Changes format of a \code{k}-nearest-neighbour graph (\code{k}-NNG) object produced by \code{SingleBench}.
You will typically want to use this inside \code{WrapTool} to change the format of a pre-computed \code{k}-NNG object for use with a projection or clustering tool.
To only keep the \code{Indices} slot of \code{knn} (only keeping a single matrix instead of a list of two matrices), set parameter \code{only_indices} to \code{TRUE}.
To modify the \code{Indices} slot of \code{knn} to use zero-indexing, set parameter \code{zero_index} to \code{TRUE}.
To include the zero-th neighbour (self) for each point in \code{knn}, set parameter \code{zeroth_neighbour} to \code{TRUE}.
If you want to limit the number of neighbours (to a value smaller than the original \code{k}), specify the new value using parameter \code{new_k}.
}
