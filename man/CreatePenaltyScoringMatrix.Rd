% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/99_HierarchicalPenalties.R
\name{CreatePenaltyScoringMatrix}
\alias{CreatePenaltyScoringMatrix}
\title{Create a match/mismatch scoring matrix with hierarchical penalties}
\usage{
CreatePenaltyScoringMatrix(labels, g_c = 0, g_a = 0.2, m_c = 0.4, m_a = 0)
}
\arguments{
\item{labels}{character vector: all possible manual labels}

\item{g_c}{numeric: constant generalisation penalty. Default value is \code{0}}

\item{g_a}{numeric: additive generalisation penalty. Default value is \code{0.2}}

\item{m_c}{numeric: constant misidentification penalty. Default value is \code{0.4}}

\item{m_a}{numeric: additive misidentification penalty. Default value is \code{0}}
}
\description{
Creates a matrix of scores for evaluating the prediction of cell population labels.
Each pair of labels gets assigned a score for match (if they are identical) or mismatch.
Rows of the matrix correspond to true labels and columns correspond to predicted labels.
}
\details{
\subsection{Hierarchical penalties}{

If the manual labels of your input data are derived from a hierarchy of populations (ie. \strong{gating hierarchy} for cytometry data), you can make use of the entire hierarchy for evaluation purposes.
For instance, instead of using a '\strong{CD4+ T cell}' label, you can use '\strong{Lymphocyte/T cell/CD4+ T cell}' (using a path-like label with '\code{/}' as separator).
Then, if you apply a clustering tool and match each cluster to a population present in the data, \code{SingleBench} can evaluate the quality of clustering more carefully.
Specifically, instead of distinguishing between \emph{match} versus \emph{mismatch}, a scoring matrix is produced which penalises mismatches with different severity.
For instance, to misclassify '\strong{Lymphocyte/T cell/CD4+ T cell}' as '\strong{Lymphocyte/T cell}' can be better than misclassifying it as '\strong{Lymphocyte/T cell/CD8+ T cell}', which is still better than misclassifying it as '\strong{Lymphocyte/B cell/Alpha-Beta Mature B Cell}'.

The scoring of each potential mismatch is based on the route from the true label to the predicted label through the label hierarchy tree.
To parametrise the hierarchical penalty model, you can set 4 custom values.
Firstly, the '\emph{constant generalisation penalty}' \code{g_c} penalises the first step taken in the direction of the tree root and the '\emph{additive generalisation penalty}' \code{g_a} penalises each step in that direction.
Secondly, the '\emph{constant misidentification penalty}' \code{m_a} panelises the first step taken in the direction of the tree leaves and the '\emph{additive misidentification penalty}' \code{m_a} penalises each step in that direction.
The values of these penalties are positive values, and the sum of penalties for a misclassification get subtracted from \code{1}, which is the score for correct match.
By default, \code{g_c = 0}, \code{g_a = 0.2}, \code{m_c = 0.4}, \code{m_a = 0}.
}
}
\seealso{
\itemize{
\item \strong{\code{GetPenaltyScoringMatrix}}: extracts a penalty scoring matric from a \code{Benchmark}-type object
}
}
